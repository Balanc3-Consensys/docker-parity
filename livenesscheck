#! /bin/bash
MIN_CONNECTED_PEER_RATIO=0.2  # 0.2*25 = 5
MAX_NODE_LIVENESS_CHECKS=8    # mininum of 8 * 30s = 4 min
HOST='https://parity-rpc.balanc3.net'
# HOST='http://localhost:8545'

# Fetch peer info and node number
PEER_INFO=$( curl -s --data '{"method":"parity_netPeers","params":[],"id":1,"jsonrpc":"2.0"}' -H "Content-Type: application/json" -X POST $HOST | jq '.result | { connected: .connected, max: .max }' )
CONNECTED=$( echo $PEER_INFO | jq '.connected' )
MAX=$( echo $PEER_INFO | jq '.max' )

# Check for irregularities in peef info
if [ -z "$CONNECTED" ] || [ -z "$MAX" ]; then
  echo "number of connected peers/max peer amount not found"
  # exit -1
fi
if [ "$CONNECTED" -lt 0 ] || [ "$MAX" -lt 0 ] || [ "$CONNECTED" -gt "$MAX" ]; then
  echo "irregular peer values"
  # exit -1
fi

# Check peer ratio
PARITY_RATIO=$(( $CONNECTED/$MAX ))
if (( $(echo "$MIN_CONNECTED_PEER_RATIO > $PARITY_RATIO" |bc -l) )); then
  echo -ne "peer count too low - "
  echo "$PARITY_RATIO/$MAX"
  # exit -1
fi

# Get node number
CUR_NODE=$( echo $(( 16#$(curl -s --data '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":83}' -H "Content-Type: application/json" -X POST $HOST | jq -r .result | cut -c 3-) )) )

# Check for irregularities in node number
if [ -z $CUR_NODE ]; then
  echo "can't find current node"
  # exit -1
fi

# Identify if new node
if [ -z $LAST_NODE ] || [ $CUR_NODE -ne $LAST_NODE ]; then
  export LAST_NODE=$CUR_NODE
  export NODE_LIVENESS_CHECKS=0
  echo "new node: $CUR_NODE"
fi

# Check if node is stuck
NODE_LIVENESS_CHECKS=$(( $NODE_LIVENESS_CHECKS+1 ))
if [ $NODE_LIVENESS_CHECKS -gt $MAX_NODE_LIVENESS_CHECKS ]; then
  export NODE_LIVENESS_CHECKS=0
  echo "Same node for $MAX_NODE_LIVENESS_CHECKS liveness checks! Restarting... "
  # exit -1
fi
